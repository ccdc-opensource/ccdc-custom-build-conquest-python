jobs:
  - job: Centos7
    pool:
      vmImage: "ubuntu-latest"
    # We use a container to run the build as we must be compatible with centos7's older glibc
    container: rockdreamer/centos7-gcc9:latest
    variables:
      artifactory.platformName: "centos7"
    steps:
      - task: CmdLine@2
        inputs:
          script: "sudo yum -y install mesa-libGL-devel libX11-devel libXmu-devel libXft-devel unzip wget"
        displayName: "Add prerequisites"
      - task: CmdLine@2
        inputs:
          script: "wget -O /tmp/cmake-3.17.1-Linux-x86_64.sh --no-check-certificate --quiet 'https://cmake.org/files/v3.17/cmake-3.17.1-Linux-x86_64.sh'"
        displayName: "Fetch cmake"
      - task: CmdLine@2
        inputs:
          script: "sudo bash /tmp/cmake-3.17.1-Linux-x86_64.sh --prefix=/usr/local --exclude-subdir"
        displayName: "Install cmake"
      # No need to setup specific python, the container's python3 will be used
      - template: common-tasks.yml

  # - job: Ubuntu
  #   pool:
  #     vmImage: "ubuntu-22.04"
  #   variables:
  #     artifactory.platformName: "ubuntu22.04"
  #   steps:
  #     - task: CmdLine@2
  #       inputs:
  #         script: "sudo apt-get -y update"
  #       displayName: "Apt update"
  #     - task: CmdLine@2
  #       inputs:
  #         script: "sudo apt-get -y upgrade"
  #       displayName: "Apt upgrade"
  #     - task: CmdLine@2
  #       inputs:
  #         script: "sudo apt-get -y install libgl1-mesa-dev libxmuu-dev libx11-dev libxft-dev wget"
  #       displayName: "Add prerequisites"
  #     - task: CmdLine@2
  #       inputs:
  #         script: "wget -O /tmp/cmake-3.17.1-Linux-x86_64.sh --no-check-certificate --quiet 'https://cmake.org/files/v3.17/cmake-3.17.1-Linux-x86_64.sh'"
  #       displayName: "Fetch cmake"
  #     - task: CmdLine@2
  #       inputs:
  #         script: "sudo bash /tmp/cmake-3.17.1-Linux-x86_64.sh --prefix=/usr/local --exclude-subdir"
  #       displayName: "Install cmake"
  #     - task: UsePythonVersion@0
  #       inputs:
  #         versionSpec: "3.8"
  #       displayName: "Use latest python 3.8"
  #     # No need to setup specific python, the container's python3 will be used
  #     - template: common-tasks.yml

  # - job: macOS
  #   pool:
  #     vmImage: "macOS-11"
  #   variables:
  #     artifactory.platformName: "darwin"
  #   steps:
  #     - task: UsePythonVersion@0
  #       inputs:
  #         versionSpec: "3.8"
  #       displayName: "Use latest python 3.8"
  #     # No need to setup specific python, the container's python3 will be used
  #     - template: common-tasks.yml

  # - job: WindowsVS2019
  #   pool:
  #     vmImage: "windows-2019"
  #   variables:
  #     build_vs_version: "2019"
  #     artifactory.platformName: "windows"
  #   steps:
  #     - task: ArtifactoryGenericDownload@3
  #       inputs:
  #         connection: 'devops-ccdc-3rd-party'
  #         specSource: 'taskConfiguration'
  #         fileSpec: |
  #           {
  #             "files": [
  #               {
  #                 "pattern": "ccdc-3rdparty-python-interpreters/conquest-windows-build-requirements/",
  #                 "target": "$(System.ArtifactsDirectory)/"
  #               }
  #             ]
  #           }
  #         replaceSpecVars: true
  #         failNoOp: true
  #       displayName: "Download windows requirements from artifactory"
  #     - task: CmdLine@2
  #       inputs:
  #         script: "tree $(System.ArtifactsDirectory) /f"
  #       displayName: "Contents of ArtifactsDirectory"

  #     - task: UsePythonVersion@0
  #       inputs:
  #         versionSpec: "3.8"
  #       displayName: "Use latest python 3.8"
  #     # No need to setup specific python, the container's python3 will be used
  #     - template: common-tasks.yml
